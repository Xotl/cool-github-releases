name: 'Deploy to Marketplace'
on: workflow_call

jobs:
  build:
    name: 'Generate dist'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build the Docker image
        run: docker build --target builder -t gh-action-builder .
          
      - name: Generate new dist folder & files
        run: |
          mkdir new-dist
          docker run --rm -v ${PWD}/new-dist:/usr/src/app/dist gh-action-builder

      - name: Save dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./new-dist/

  commit:
    name: 'Commit new dist & version files'
    needs: build
    runs-on: ubuntu-latest

    env: 
      REMOTE_REPO: https://${{ secrets.GITHUB_OAUTH_TOKEN }}@github.com/${{ github.repository }}.git
      REMOTE_REF: ${{ github.ref }}

    steps:
      - uses: actions/checkout@v4

      - name: Delete old dist
        run: rm -rf dist

      - name: Download dist from prev job
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Update version
        run: |
          npm version | grep "cool-github-releases" | cut -d ':' -f2 | cut -d \' -f2
          npm --no-git-tag-version version patch
          NEW_VERSION=$(npm version | grep "cool-github-releases" | cut -d ':' -f2 | cut -d \' -f2)
          NEW_MAJOR_TAG="v$(echo "${NEW_VERSION}" | cut -d '.' -f1)"
          NEW_TAG="v${NEW_VERSION}"
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "NEW_MAJOR_TAG=${NEW_MAJOR_TAG}" >> $GITHUB_ENV
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV


      - name: Push tags & files back to repo
        run: |
          git config user.name "github"
          git config user.email "github@users.noreply.github.com"
          git add .
          git commit -m "${{env.NEW_TAG}} | Auto pushed from Github Actions"
          git push ${REMOTE_REPO} :refs/tags/${{env.NEW_MAJOR_TAG}} || true
          git tag -fa "${{env.NEW_MAJOR_TAG}}" -m "${{env.NEW_MAJOR_TAG}} | Auto pushed from Github Actions"
          git tag -a "${{env.NEW_TAG}}" -m "${{env.NEW_TAG}} | Auto pushed from Github Actions"
          git push --follow-tags ${REMOTE_REPO} HEAD:${REMOTE_REF}

      - name: Create a new release
        uses: Xotl/cool-github-releases@v1
        with:
          mode: update
          tag_name: ${{env.NEW_TAG}}
          github_token: ${{ github.token }} 